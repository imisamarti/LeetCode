/**
 * @param {string} homepage
 */
var BrowserHistory = function(homepage) {
    
    //initialize links in homepage
    this.links = [homepage];
    //initialize position as 0// here we'll count the moves we make 
    this.position = 0;
    
};

/** 
 * @param {string} url
 * @return {void}
 */
BrowserHistory.prototype.visit = function(url) {
    
    //if you visit a page, add 1 step to the position 
    //because you moved from one page to another
    this.position++;
    //make the current link at the current position equal to the page visited
    this.links[this.position] = url;
    
    //if the current position is less than the last page visited overall
    //make the current links array equal the 
    //sliced links array from the start till for the position+1
    if(this.position < this.length-1){ 
        this.links = this.links.slice(0, this.position+1);
    }
    
};

/** 
 * @param {number} steps
 * @return {string}
 */
BrowserHistory.prototype.back = function(steps) {
    
    //if position count minus steps is negative
    //make the current position the homepage
    //else just substract the number of steps from current position
    if(this.position - steps < 0){
        this.position = 0;
    } else {
        this.position -= steps;
    }
    
    //return current link at the # of position
    return this.links[this.position];
};

/** 
 * @param {number} steps
 * @return {string}
 */
BrowserHistory.prototype.forward = function(steps) {
    
    //if the current position plus steps is bigger or equal
    //to the lengths of the links visited
    //make the new position equal to the last link visited
    //if not then add the steps to the position count
    if(this.position+steps >= this.links.length){
         this.position = this.links.length-1;
    }else{
        this.position += steps;
    }
    
    //return the link at the # of position
    return this.links[this.position];
    
};

/** 
 * Your BrowserHistory object will be instantiated and called as such:
 * var obj = new BrowserHistory(homepage)
 * obj.visit(url)
 * var param_2 = obj.back(steps)
 * var param_3 = obj.forward(steps)
 */
